services:
  rental_database:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: app_user
      POSTGRES_DB: app_db
      POSTGRES_PASSWORD: app_password
    ports:
      - "5432:5432"
    networks:
      - mynetwork
  
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    entrypoint: ./backend/entrypoint.sh
    volumes:
      - ./backend:/rental-crud/backend
    environment:
      DATABASE_URL: "${DATABASE_URL:-postgresql+asyncpg://app_user:app_password@rental_database:5432/app_db}"
    ports:
      - "8000:8000"
    depends_on:
      - rental_database
    networks:
      - mynetwork
      
  frontend:
    build: 
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - ./frontend:/rental-crud/frontend
    ports:
      - "8501:8501"
    networks:
      - mynetwork
  
networks:
  mynetwork:
      driver: bridge

volumes:
  pgdata:
  pgadmin-data: